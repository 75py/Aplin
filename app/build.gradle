/*
 * Copyright 2015 75py
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'project-report'

apply from: 'signingConfigs/release.gradle', to: android

def preDexLibs = !project.hasProperty('disablePreDex')
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.nagopy.android.aplin"
        minSdkVersion 19
        targetSdkVersion "$target_sdk_version"
        versionCode publish_version_code
        versionName "$publish_version_name-$gitSha"
        resValue "string", "version_name", "$publish_version_name ($publish_version_code, $gitSha, $buildTime)"
        testInstrumentationRunner "com.nagopy.android.aplin.AplinTestRunner"
        multiDexEnabled true

        buildConfigField "String", "AD_APP_ID", "\"ca-app-pub-2998260208076899~7954619765\""
    }
    signingConfigs {
        debug {
            storeFile file('aplin_beta.keystore')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    packagingOptions {
        exclude 'asm-license.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'DEPENDENCIES'
        exclude 'LICENSE.txt'
        exclude 'NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    lintOptions {
        abortOnError false
        disable 'PrivateResource'
    }
    dexOptions {
        //javaMaxHeapSize "1024M"
        preDexLibraries = preDexLibs
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force "com.android.support:support-v4:$support_libs_version"
        force "com.android.support:support-annotations:$support_libs_version"
        force "com.android.support:appcompat-v7:$support_libs_version"
        force "com.google.dagger:dagger:$dagger_version"
        force 'org.hamcrest:hamcrest-core:1.3'
        force 'junit:junit:4.12'
    }
}

dependencies {
    compile 'com.android.support:multidex:1.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "com.android.support:appcompat-v7:$support_libs_version"
    compile "com.google.firebase:firebase-crash:$firebase_version"
    compile "com.google.firebase:firebase-ads:$firebase_version"
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.timber:timber:4.5.0'
    compile "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    provided 'javax.annotation:jsr250-api:1.0'

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile "org.powermock:powermock-module-junit4:1.6.4"
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.4"
    testCompile "org.powermock:powermock-api-mockito:1.6.4"
    testCompile "org.powermock:powermock-classloading-xstream:1.6.4"

    androidTestCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    kaptAndroidTest "org.jetbrains.kotlin:kotlin-annotation-processing:${kotlin_version}"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
}
buildscript {
    ext.support_libs_version = '25.2.0'
    ext.kotlin_version = '1.1.0'
    ext.dagger_version = '2.9'
    ext.firebase_version = '10.0.1'
    ext.target_sdk_version = 25
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    ext.sdk_dir = properties.getProperty("sdk.dir")
    if(properties.containsKey("travis.job")) {
        ext.publish_version_name = "$publish_version_name-${properties.getProperty("travis.job")}"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
kapt {
    generateStubs = true
}

apply plugin: 'com.google.gms.google-services'
