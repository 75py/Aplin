/*
 * Copyright 2015 75py
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    publish_version_name = versionName()
    publish_version_code = versionCode()
}

task bumpMajor << {
    ant.propertyfile(file: 'version.properties') {
        entry(key: 'major', type: 'int', operation: '+', value: 1)
        entry(key: 'minor', type: 'int', operation: '=', value: 0)
        entry(key: 'patch', type: 'int', operation: '=', value: 0)
        entry(key: 'id', type: 'int', operation: '+', value: 1)
    }
    generateReadMe()
}

task bumpMinor << {
    ant.propertyfile(file: 'version.properties') {
        entry(key: 'minor', type: 'int', operation: '+', value: 1)
        entry(key: 'patch', type: 'int', operation: '=', value: 0)
        entry(key: 'id', type: 'int', operation: '+', value: 1)
    }
    generateReadMe()
}

task bumpPatch << {
    ant.propertyfile(file: 'version.properties') {
        entry(key: 'patch', type: 'int', operation: '+', value: 1)
        entry(key: 'id', type: 'int', operation: '+', value: 1)
    }
    generateReadMe()
}

task version << {
    println "Version name : " + versionName()
    println "Version code : " + versionCode()
}

String versionName() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('version.properties').newDataInputStream())
    return properties['major'] + "." + properties['minor'] + "." + properties['patch']
}

Integer versionCode() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('version.properties').newDataInputStream())
    return Integer.valueOf(properties['id'].toString())
}

void generateReadMe() {
    def template = file('README.md.template').text
    def result = template.replaceAll("%%version%%", versionName())
    file("README.md").withWriter { it << result }
}
